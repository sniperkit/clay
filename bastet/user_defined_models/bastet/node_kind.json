{
  "type_name": "NodeKind",
  "resource_name": "node_kinds",
  "to_be_migrated": true,
  "is_controller_enabled": true,
  "fields": [
    {
      "name": "ID",
      "tag": "json:\"id\" yaml:\"id\" gorm:\"primary_key;auto_increment\"",
      "type_name": "int"
    },
    {
      "name": "Description",
      "tag": "json:\"description\" yaml:\"description\"",
      "type_name": "string"
    },
    {
      "name": "ImageName",
      "tag": "json:\"image_name\" yaml:\"image_name\" gorm:\"not null\"",
      "type_name": "string"
    },
    {
      "name": "InitializationTemplateID",
      "tag": "json:\"initialization_template_id\" yaml:\"initialization_template_id\"",
      "type_name": "int"
    },
    {
      "name": "InitializationTemplate",
      "tag": "json:\"initialization_template\" yaml:\"initialization_template\"",
      "type_name": "Template"
    },
    {
      "name": "ConfigurationTemplateID",
      "tag": "json:\"configuration_template_id\" yaml:\"configuration_template_id\" sql:\"type:integer references templates(id)\"",
      "type_name": "int"
    },
    {
      "name": "ConfigurationTemplate",
      "tag": "json:\"configuration_template\" yaml:\"configuration_template\" sql:\"type:integer references templates(id)\"",
      "type_name": "Template"
    },
    {
      "name": "Nodes",
      "tag": "json:\"nodes\" yaml:\"nodes\" gorm:\"ForeignKey:NodeID\" validate:\"omitempty,dive\"",
      "type_name": "Node",
      "is_slice": true
    }
  ],
  "sql_after_migration": [
		"create trigger if not exists DeleteTemplateBeforeNodeKindDeletion before delete on node_kinds",
		"  begin",
		"    delete from templates where id = old.initialization_template_id;",
		"    delete from templates where id = old.configuration_template_id;",
		"  end;",
		"create trigger if not exists DeleteNodeKindBeforeTemplateDeletion before delete on templates",
		"  begin",
		"    delete from node_kinds where initialization_template_id = old.id or configuration_template_id = old.id;",
		"  end;"
  ]
}
