{
  "type_name": "Link",
  "resource_name": "links",
  "to_be_migrated": true,
  "is_controller_enabled": true,
  "fields": [
    {
      "name": "SourcePortID",
      "tag": "json:\"source_port_id\" yaml:\"source_port_id\" gorm:\"primary_key\" sql:\"type:integer references ports(id)\"",
      "type_name": "int"
    },
    {
      "name": "SourcePort",
      "tag": "json:\"source_port\" yaml:\"source_port\" gorm:\"ForeignKey:SourcePortID\" validate:\"omitempty,dive\"",
      "type_name": "Port"
    },
    {
      "name": "DestinationPortID",
      "tag": "json:\"destination_port_id\" yaml:\"destination_port_id\" sql:\"type:integer references ports(id)\"",
      "type_name": "int"
    },
    {
      "name": "DestinationPort",
      "tag": "json:\"destination_port\" yaml:\"destination_port\" gorm:\"ForeignKey:DestinationPortID\" validate:\"omitempty,dive\"",
      "type_name": "Port"
    },
    {
      "name": "ToBeDeleted",
      "tag": "json:\"to_be_deleted,omitempty\" yaml:\"to_be_deleted,omitempty\" sql:\"-\"",
      "type_name": "bool"
    }
  ],
  "sql_after_migration": [
    "drop trigger if exists DeleteLinkBeforePortDeletion;",
    "create trigger if not exists DeleteLinkBeforePortDeletion before delete on ports",
    "  begin",
    "    delete from links where source_port_id = old.id or destination_port_id = old.id;",
    "  end;",
    "drop trigger if exists DeleteLinkBeforeLinkDeletion;",
    "create trigger if not exists DeleteLinkBeforeLinkDeletion before delete on links",
    "  begin",
    "    delete from links where source_port_id = old.destination_port_id;",
    "  end;",
    "drop trigger if exists DeleteAndInsertLinkBeforeLinkCreation;",
    "create trigger if not exists DeleteAndInsertLinkBeforeLinkCreation before insert on links",
    "  begin",
    "    delete from links where source_port_id = new.source_port_id or source_port_id = new.destination_port_id or destination_port_id = new.source_port_id or destination_port_id = new.destination_port_id;",
    "    insert into links(source_port_id, destination_port_id) values(new.destination_port_id, new.source_port_id);",
    "  end;",
    "drop trigger if exists DeleteLinkBeforeLinkUpdate;",
    "create trigger if not exists DeleteLinkBeforeLinkUpdate before update of destination_port_id on links",
    "  begin",
    "    delete from links where destination_port_id = new.source_port_id;",
    "  end;"
  ]
}
