{{/* <script> */}}

var storedCallbackNodeKindInformationUpdated = null;

function showNodeKindInformation(nodeKindID, callbackNodeKindInformationUpdated) {
  storedCallbackNodeKindInformationUpdated = callbackNodeKindInformationUpdated;

  if (nodeKindID == null) {
    var nodeKind = {
      id: 0,
      name: '',
      image_name: '',
      initialization_template_id: 0,
      initialization_template: {
        name: '',
        template_content: ''
      },
      configuration_template_id: 0,
      configuration_template: {
        name: '',
        template_content: ''
      }
    };
    repaintNodeKindInformation(nodeKind, true);
  } else {
    getResource('node_kinds', nodeKindID, 'preloads=initialization_template,configuration_template', function(nodeKind) {
      repaintNodeKindInformation(nodeKind, true);
    });
  }
}

function repaintNodeKindInformation(nodeKind, initializeTabSelection) {
  var node_kind_information_table = $('#node_kind_information_float_panel #node_kind_information_tab #node_kind_information_table');

  node_kind_information_table.find('input[name=id]').val(nodeKind.id);
  node_kind_information_table.find('input[name=name]').val(nodeKind.name);
  node_kind_information_table.find('input[name=image_name]').val(nodeKind.image_name);

  $('#node_kind_information_float_panel #initialization_template_tab').find('input[name=initialization_template_id]').val(nodeKind.initialization_template.id);
  $('#node_kind_information_float_panel #initialization_template_tab').find('textarea[name=initialization_template_content]').val(nodeKind.initialization_template.template_content);
  $('#node_kind_information_float_panel #configuration_template_tab').find('input[name=configuration_template_id]').val(nodeKind.configuration_template.id);
  $('#node_kind_information_float_panel #configuration_template_tab').find('textarea[name=configuration_template_content]').val(nodeKind.configuration_template.template_content);

  if (initializeTabSelection) {
    $('#node_kind_information_float_panel a[href="#node_kind_information_tab"]').tab('show');
  }
  $('#node_kind_information_float_panel').fadeIn(50);

  $('#page_cover').fadeIn(50);
}

$('#node_kind_information_float_panel a[data-toggle=tab]').on('shown.bs.tab', function(e) {
});

$('#node_kind_information_panel').on('click', 'button[name=cancel_node_kind_btn]', function() {
  $('#node_kind_information_float_panel').fadeOut(50, function() {
    $('#page_cover').fadeOut(50);
  });
});

$('#node_kind_information_panel').on('click', 'button[name=update_node_kind_btn]', function() {
  if (!confirm('Are you sure to register/update the node kind?')) {
    return;
  }

  var nodeKindID = $('#node_kind_information_panel').find('input[name=id]').val();
  if ((nodeKindID == null) || (nodeKindID == undefined) || (nodeKindID == '')) {
    nodeKindID = 0;
  }

  var nodeKindName = $('#node_kind_information_panel').find('input[name=name]').val();
  var imageName = $('#node_kind_information_panel').find('input[name=image_name]').val();
  var initializationTemplateID = $('#node_kind_information_panel').find('input[name=initialization_template_id]').val();
  var initializationTemplate = $('#node_kind_information_panel').find('textarea[name=initialization_template_content]').val();
  var configurationTemplateID = $('#node_kind_information_panel').find('input[name=configuration_template_id]').val();
  var configurationTemplate = $('#node_kind_information_panel').find('textarea[name=configuration_template_content]').val();

  var nodeKind = {
    id: parseInt(nodeKindID),
    name: nodeKindName,
    image_name: imageName,
    initialization_template_id: parseInt(initializationTemplateID),
    initialization_template: {
      id: parseInt(initializationTemplateID),
      name: nodeKindName + '_NodeKind_InitializationTemplate',
      template_content: initializationTemplate
    },
    configuration_template_id: parseInt(configurationTemplateID),
    configuration_template: {
      id: parseInt(configurationTemplateID),
      name: nodeKindName + '_NodeKind_ConfigurationTemplate',
      template_content: configurationTemplate
    }
  };
  if (nodeKindID == 0) {
    delete(nodeKind['id']);
    delete(nodeKind.initialization_template_id);
    delete(nodeKind.configuration_template_id);
    delete(nodeKind.initialization_template['id']);
    delete(nodeKind.configuration_template['id']);
  }

  if (nodeKind.id == undefined) {
    postResource('node_kinds', nodeKind, '', function(result, xhr) {
      showProcessResult(result, xhr, 201, "The node kind information has been registered successfully.");
      postProcessUpdateNodeKind(result, xhr);
    });
  } else {
    putResource('node_kinds', nodeKind.id, nodeKind, '', function(result, xhr) {
      showProcessResult(result, xhr, 200, "The node kind information has been updated successfully.");
      postProcessUpdateNodeKind(result, xhr);
    });
  }

});

function postProcessUpdateNodeKind(result, xhr) {
  var nodeKindID = result.id;

  getResource('node_kinds', nodeKindID, 'preloads=initialization_template,configuration_template', function(nodeKind) {
    repaintNodeKindInformation(nodeKind, false);
    if ((storedCallbackNodeKindInformationUpdated != null) && (storedCallbackNodeKindInformationUpdated != undefined)) {
      storedCallbackNodeKindInformationUpdated();
    }
  });
}

function deleteNodeKindInformation(nodeKindID, callbackNodeKindInformationDeleted) {
  if (!confirm('Are you sure to delete the node kind?')) {
    return;
  }

  deleteResource('node_kinds', nodeKindID, '', function(result, xhr) {
    showProcessResult(result, xhr, 204, "The node kind information has been deleted successfully.");
    callbackNodeKindInformationDeleted();
  });
}
